 drop table if exists admin CASCADE ;
    
    drop table if exists attach_file CASCADE ;
    
    drop table if exists authorizations CASCADE ;
    
    drop table if exists cart CASCADE ;
    
    drop table if exists category CASCADE ;
    
    drop table if exists comment CASCADE ;
    
    drop table if exists coupon CASCADE ;
    
    drop table if exists delivery CASCADE ;
    
    drop table if exists exchange CASCADE ;
    
    drop table if exists inquiry CASCADE ;
    
    drop table if exists inquiry_resp CASCADE ;
    
    drop table if exists interest_product CASCADE ;
    
    drop table if exists login_log CASCADE ;
    
    drop table if exists member CASCADE ;
    
    drop table if exists member_coupon CASCADE ;
    
    drop table if exists mileage_history CASCADE ;
    
    drop table if exists notice CASCADE ;
    
    drop table if exists notification CASCADE ;
    
    drop table if exists order_cancel CASCADE ;
    
    drop table if exists order_product CASCADE ;
    
    drop table if exists orders CASCADE ;
    
    drop table if exists payment CASCADE ;
    
    drop table if exists product CASCADE ;
    
    drop table if exists product_image CASCADE ;
    
    drop table if exists product_info CASCADE ;
    
    drop table if exists recommendation CASCADE ;
    
    drop table if exists refund CASCADE ;
    
    drop table if exists return CASCADE ;
    
    drop table if exists review CASCADE ;
    
    drop table if exists users CASCADE ;
    
    drop sequence if exists hibernate_sequence;

create sequence hibernate_sequence start with 1 increment by 1;
CREATE TABLE ADMIN (
    ADMIN_ID BIGINT NOT NULL,
    NAME VARCHAR(255),
    PRIMARY KEY (ADMIN_ID)
);

CREATE TABLE ATTACH_FILE (
   ATTACH_FILE_ID BIGINT NOT NULL,
    SEQUENCE INTEGER NOT NULL,
    STORED_NAME VARCHAR(255),
    ORIGINAL_NAME VARCHAR(255),
    STORED_PATH VARCHAR(255),
    EXTENSION_NAME VARCHAR(255),
    FILE_SIZE INTEGER NOT NULL,
    CREATED_TIME TIMESTAMP,
    PRIMARY KEY (ATTACH_FILE_ID, SEQUENCE)
);

CREATE TABLE AUTHORIZATIONS (
    USER_ID BIGINT NOT NULL,
   AUTH VARCHAR(255) NOT NULL,
    REGISTRATION_TIME TIMESTAMP,
    PRIMARY KEY (USER_ID, AUTH)
);

CREATE TABLE CART (
    MEMBER_ID BIGINT NOT NULL,
    PRODUCT_INFO_ID BIGINT NOT NULL,
   QUANTITY INTEGER NOT NULL,
    PRIMARY KEY (MEMBER_ID, PRODUCT_INFO_ID)
);

CREATE TABLE CATEGORY (
   CATEGORY_ID BIGINT NOT NULL,
    NAME VARCHAR(255),
    PARENT_ID BIGINT,
    REGISTRANT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFIER VARCHAR(255),
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (CATEGORY_ID)
);

CREATE TABLE COMMENT (
   COMMENT_ID BIGINT NOT NULL,
    REVIEW_ID BIGINT,
    MEMBER_ID BIGINT,
    CONTENT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    PRIMARY KEY (COMMENT_ID)
);

CREATE TABLE COUPON (
    COUPON_ID BIGINT NOT NULL,
    NAME VARCHAR(255),
   CTYPE VARCHAR(31) NOT NULL,
    PERIOD INTEGER NOT NULL,
    DISCOUNT_RATE INTEGER,
    DISCOUNT_AMOUNT INTEGER,
    REGISTRANT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFIER VARCHAR(255),
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (COUPON_ID)
);

CREATE TABLE DELIVERY (
   DELIVERY_ID BIGINT NOT NULL,
    RECIPIENT VARCHAR(255),
    CITY VARCHAR(255),
    STREET VARCHAR(255),
    ZIPCODE VARCHAR(255),
    PHONE_NUMBER VARCHAR(255),
    REQUIREMENTS VARCHAR(255),
    PRIMARY KEY (DELIVERY_ID)
);

CREATE TABLE EXCHANGE (
   EXCHANGE_ID BIGINT NOT NULL,
    ORDER_PRODUCT_ID BIGINT,
    PRODUCT_INFO_ID BIGINT,
    ADMIN_ID BIGINT,
    STATUS VARCHAR(255),
    APPLICATION_DATE TIMESTAMP,
    ACCEPTANCE_DATE TIMESTAMP,
    PRIMARY KEY (EXCHANGE_ID)
);

CREATE TABLE INQUIRY (
   INQUIRY_ID BIGINT NOT NULL,
    MEMBER_ID BIGINT,
    TYPE VARCHAR(255),
    TITLE VARCHAR(255),
    CONTENT VARCHAR(255),
    ATTACH_FILE_ID BIGINT,
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (INQUIRY_ID)
);

CREATE TABLE INQUIRY_RESP (
    INQUIRY_ID BIGINT NOT NULL,
    ADMIN_ID BIGINT,
    CONTENT VARCHAR(255),
    ATTACH_FILE_ID BIGINT,
    REGISTRANT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFIER VARCHAR(255),
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (INQUIRY_ID)
);

CREATE TABLE INTEREST_PRODUCT (
   MEMBER_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID, PRODUCT_ID)
);

CREATE TABLE LOGIN_LOG (
   LOGIN_LOG_ID BIGINT NOT NULL,
    LOGIN_SUCCESS VARCHAR(255),
    USER_ID BIGINT,
    LOGIN_ID VARCHAR(255),
    LOGIN_PASSWORD VARCHAR(255),
    LOGIN_FAIL_REASON VARCHAR(255),
    IP VARCHAR(255),
    LOGIN_TIME TIMESTAMP,
    PRIMARY KEY (LOGIN_LOG_ID)
);

CREATE TABLE MEMBER (
    MEMBER_ID BIGINT NOT NULL,
    NAME VARCHAR(255),
   CITY VARCHAR(255),
    STREET VARCHAR(255),
    ZIPCODE VARCHAR(255),
    TELEPHONEDMS VARCHAR(255),
    PHONE_NUMBER VARCHAR(255),
    EMAIL VARCHAR(255),
    BIRTH VARCHAR(255),
    MILEAGE INTEGER NOT NULL,
    DELIVERY_ID BIGINT,
    PRIMARY KEY (MEMBER_ID)
);

CREATE TABLE MEMBER_COUPON (
   MEMBER_COUPON_ID BIGINT NOT NULL,
    COUPON_ID BIGINT,
    MEMBER_ID BIGINT,
    ISSUE_DATE TIMESTAMP,
    EXPIRATION_DATE TIMESTAMP,
    USAGE_STATUS VARCHAR(255),
    PRIMARY KEY (MEMBER_COUPON_ID)
);

CREATE TABLE MILEAGE_HISTORY (
   MILEAGE_HISTORY_ID BIGINT NOT NULL,
    MEMBER_ID BIGINT,
    ORDER_ID BIGINT,
    STATUS VARCHAR(255),
    USAGE_TIME TIMESTAMP,
    ACCUMULATION_MILEAGE INTEGER NOT NULL,
    PRIMARY KEY (MILEAGE_HISTORY_ID)
);

CREATE TABLE NOTICE (
   NOTICE_ID BIGINT NOT NULL,
    TITLE VARCHAR(255),
    CONTENT VARCHAR(255),
    ATTACH_FILE_ID BIGINT,
    REGISTRANT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFIER VARCHAR(255),
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (NOTICE_ID)
);

CREATE TABLE NOTIFICATION (
   NOTIFICATION_ID BIGINT NOT NULL,
    MEMBER_ID BIGINT,
    TITLE VARCHAR(255),
    CONTENT VARCHAR(255),
    NOTIFICATION_TIME TIMESTAMP,
    CHECK_YN VARCHAR(255),
    PRIMARY KEY (NOTIFICATION_ID)
);

CREATE TABLE ORDER_CANCEL (
   ORDER_CANCEL_ID BIGINT NOT NULL,
    REFUND_ID BIGINT,
    ORDER_PRODUCT_ID BIGINT,
    STATUS VARCHAR(255),
    PROGRESS VARCHAR(255),
    APPLY_DATE TIMESTAMP,
    AMOUNT INTEGER NOT NULL,
    PRIMARY KEY (ORDER_CANCEL_ID)
);

CREATE TABLE ORDER_PRODUCT (
   ORDER_PRODUCT_ID BIGINT NOT NULL,
    ORDER_ID BIGINT,
    PRODUCT_INFO_ID BIGINT,
    STATUS VARCHAR(255),
    PRICE INTEGER NOT NULL,
    DISCOUNT_PRICE INTEGER NOT NULL,
    AMOUNT INTEGER NOT NULL,
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    PRIMARY KEY (ORDER_PRODUCT_ID)
);

CREATE TABLE ORDERS (
   ORDER_ID BIGINT NOT NULL,
    MEMBER_ID BIGINT,
    ORDER_DATE TIMESTAMP,
    STATUS VARCHAR(255),
    TOTAL_PRICE INTEGER NOT NULL,
    SHIPPING_AMOUNT INTEGER NOT NULL,
    MEMBER_COUPON_ID BIGINT,
    USAGE_MILEAGE INTEGER NOT NULL,
    TOTAL_PAYMENT_PRICE INTEGER NOT NULL,
    DELIVERY_ID BIGINT,
    ORDERER VARCHAR(255),
    PHONE_NUMBER VARCHAR(255),
    EMAIL VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    PRIMARY KEY (ORDER_ID)
);

CREATE TABLE PAYMENT (
   PAYMENT_ID BIGINT NOT NULL,
    ORDER_ID BIGINT,
    METHOD VARCHAR(255),
    STATUS VARCHAR(255),
    PAYMENT_DATE TIMESTAMP,
    TOTAL_AMOUNT INTEGER NOT NULL,
    ADDITIONAL_AMOUNT INTEGER NOT NULL,
    DEPOSIT_AMOUNT INTEGER NOT NULL,
    DEPOSITOR VARCHAR(255),
    BANK VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    PRIMARY KEY (PAYMENT_ID)
);

CREATE TABLE PRODUCT (
   PRODUCT_ID BIGINT NOT NULL,
    CATEGORY_ID BIGINT,
    NAME VARCHAR(255),
    CONTENT VARCHAR(255),
    COST INTEGER NOT NULL,
    PRICE INTEGER NOT NULL,
    THUMBNAIL VARCHAR(255),
    REGISTRANT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFIER VARCHAR(255),
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (PRODUCT_ID)
);

CREATE TABLE PRODUCT_IMAGE (
    PRODUCT_ID BIGINT NOT NULL,
   SEQUENCE INTEGER NOT NULL,
    STORED_FILE_NAME VARCHAR(255),
    ORIGINAL_FILE_NAME VARCHAR(255),
    STORED_PATH VARCHAR(255),
    FILE_SIZE BIGINT,
    CREATED_TIME TIMESTAMP,
    PRIMARY KEY (PRODUCT_ID, SEQUENCE)
);

CREATE TABLE PRODUCT_INFO (
   PRODUCT_INFO_ID BIGINT NOT NULL,
    PRODUCT_ID BIGINT,
    COLOR VARCHAR(255),
    SIZE VARCHAR(255),
    QUANTITY INTEGER NOT NULL,
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    PRIMARY KEY (PRODUCT_INFO_ID)
);

CREATE TABLE RECOMMENDATION (
    MEMBER_ID BIGINT NOT NULL,
    REVIEW_ID BIGINT NOT NULL,
    PRIMARY KEY (MEMBER_ID, REVIEW_ID)
);

CREATE TABLE REFUND (
   REFUND_ID BIGINT NOT NULL,
    ORDER_ID BIGINT,
    METHOD VARCHAR(255),
    STATUS VARCHAR(255),
    AMOUNT INTEGER NOT NULL,
    REASON VARCHAR(255),
    DEPOSITOR VARCHAR(255),
    ACCOUNT_NUMBER VARCHAR(255),
    BANK VARCHAR(255),
    PRIMARY KEY (REFUND_ID)
);

CREATE TABLE RETURN (
   RETURN_ID BIGINT NOT NULL,
    ORDER_PRODUCT_ID BIGINT,
    ADMIN_ID BIGINT,
    REFUND_ID BIGINT,
    STATUS VARCHAR(255),
    REASON VARCHAR(255),
    APPLY_DATE TIMESTAMP,
    ATTACH_FILE_ID BIGINT,
    REGISTRATION_DATE TIMESTAMP,
    PRIMARY KEY (RETURN_ID)
);

CREATE TABLE REVIEW (
   REVIEW_ID BIGINT NOT NULL,
    PRODUCT_INFO_ID BIGINT,
    MEMBER_ID BIGINT,
    RATING INTEGER NOT NULL,
    CONTENT VARCHAR(255),
    ATTACH_FILE_ID BIGINT,
    REGISTRATION_TIME TIMESTAMP,
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (REVIEW_ID)
);

CREATE TABLE USERS (
    USER_ID BIGINT NOT NULL,
   UTYPE VARCHAR(31) NOT NULL,
    LOGIN_ID VARCHAR(255),
    LOGIN_PASSWORD VARCHAR(255),
    REGISTRANT VARCHAR(255),
    REGISTRATION_TIME TIMESTAMP,
    MODIFIER VARCHAR(255),
    MODIFICATION_TIME TIMESTAMP,
    DELETE_YN VARCHAR(255),
    PRIMARY KEY (USER_ID)
);

ALTER TABLE ADMIN
   ADD CONSTRAINT FK_ADMIN_USERS
   FOREIGN KEY (ADMIN_ID)
   REFERENCES USERS;

ALTER TABLE AUTHORIZATIONS
   ADD CONSTRAINT FK_AUTHORIZATIONS_USERS
   FOREIGN KEY (USER_ID)
   REFERENCES USERS;

ALTER TABLE CART
   ADD CONSTRAINT FK_CART_PRODUCTINFO
   FOREIGN KEY (PRODUCT_INFO_ID)
   REFERENCES PRODUCT_INFO;

ALTER TABLE CART
   ADD CONSTRAINT FK_CART_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE CATEGORY
   ADD CONSTRAINT FK_CATEGORY_CATEGORY
   FOREIGN KEY (PARENT_ID)
   REFERENCES CATEGORY;

ALTER TABLE COMMENT
   ADD CONSTRAINT FK_COMMENT_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE COMMENT
   ADD CONSTRAINT FK_COMMENT_REVIEW
   FOREIGN KEY (REVIEW_ID)
   REFERENCES REVIEW;

ALTER TABLE EXCHANGE
   ADD CONSTRAINT FK_EXCHANGE_ADMIN
   FOREIGN KEY (ADMIN_ID)
   REFERENCES ADMIN;

ALTER TABLE EXCHANGE
   ADD CONSTRAINT FK_EXCHANGE_ORDERPRODUCT
   FOREIGN KEY (ORDER_PRODUCT_ID)
   REFERENCES ORDER_PRODUCT;

ALTER TABLE EXCHANGE
   ADD CONSTRAINT FK_EXCHANGE_PRODUCTINFO
   FOREIGN KEY (PRODUCT_INFO_ID)
   REFERENCES PRODUCT_INFO;

ALTER TABLE INQUIRY
   ADD CONSTRAINT FK_INQUIRY_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE INQUIRY_RESP
   ADD CONSTRAINT FK_INQUIRYRESP_INQUIRY
   FOREIGN KEY (INQUIRY_ID)
   REFERENCES INQUIRY;

ALTER TABLE INQUIRY_RESP
   ADD CONSTRAINT FK_INQUIRYRESP_ADMIN
   FOREIGN KEY (ADMIN_ID)
   REFERENCES ADMIN;

ALTER TABLE INTEREST_PRODUCT
   ADD CONSTRAINT FK_INTERESTPRODUCT_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE INTEREST_PRODUCT
   ADD CONSTRAINT FK_INTERESTPRODUCT_PRODUCT
   FOREIGN KEY (PRODUCT_ID)
   REFERENCES PRODUCT;

ALTER TABLE LOGIN_LOG
   ADD CONSTRAINT FK_LOGINLOG_USERS
   FOREIGN KEY (USER_ID)
   REFERENCES USERS;

ALTER TABLE MEMBER
   ADD CONSTRAINT FK_MEMBER_DELIVERY
   FOREIGN KEY (DELIVERY_ID)
   REFERENCES DELIVERY;

ALTER TABLE MEMBER
   ADD CONSTRAINT FK_MEMBER_USERS
   FOREIGN KEY (MEMBER_ID)
   REFERENCES USERS;

ALTER TABLE MEMBER_COUPON
   ADD CONSTRAINT FK_MEMBERCOUPON_COUPON
   FOREIGN KEY (COUPON_ID)
   REFERENCES COUPON;

ALTER TABLE MEMBER_COUPON
   ADD CONSTRAINT FK_MEMBERCOUPON_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE MILEAGE_HISTORY
   ADD CONSTRAINT FK_MILEAGEHISTORY_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE MILEAGE_HISTORY
   ADD CONSTRAINT FK_MILEAGEHISTORY_ORDERS
   FOREIGN KEY (ORDER_ID)
   REFERENCES ORDERS;

ALTER TABLE NOTIFICATION
   ADD CONSTRAINT FK_NOTIFICATION_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE ORDER_CANCEL
   ADD CONSTRAINT FK_ORDERCANCEL_ORDERPRODUCT
   FOREIGN KEY (ORDER_PRODUCT_ID)
   REFERENCES ORDER_PRODUCT;

ALTER TABLE ORDER_CANCEL
   ADD CONSTRAINT FK_ORDERCANCEL_REFUND
   FOREIGN KEY (REFUND_ID)
   REFERENCES REFUND;

ALTER TABLE ORDER_PRODUCT
   ADD CONSTRAINT FK_ORDERPRODUCT_ORDERS
   FOREIGN KEY (ORDER_ID)
   REFERENCES ORDERS;

ALTER TABLE ORDER_PRODUCT
   ADD CONSTRAINT FK_ORDERPRODUCT_PRODUCTINFO
   FOREIGN KEY (PRODUCT_INFO_ID)
   REFERENCES PRODUCT_INFO;

ALTER TABLE ORDERS
   ADD CONSTRAINT FK_ORDERS_DELIVERY
   FOREIGN KEY (DELIVERY_ID)
   REFERENCES DELIVERY;

ALTER TABLE ORDERS
   ADD CONSTRAINT FK_ORDERS_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE ORDERS
   ADD CONSTRAINT FK_ORDERS_MEMBERCOUPON
   FOREIGN KEY (MEMBER_COUPON_ID)
   REFERENCES MEMBER_COUPON;

ALTER TABLE PAYMENT
   ADD CONSTRAINT FK_PAYMENT_ORDERS
   FOREIGN KEY (ORDER_ID)
   REFERENCES ORDERS;

ALTER TABLE PRODUCT
   ADD CONSTRAINT FK_PRODUCT_CATEGORY
   FOREIGN KEY (CATEGORY_ID)
   REFERENCES CATEGORY;

ALTER TABLE PRODUCT_IMAGE
   ADD CONSTRAINT FK_PRODUCTIMAGE_PRODUCT
   FOREIGN KEY (PRODUCT_ID)
   REFERENCES PRODUCT;

ALTER TABLE PRODUCT_INFO
   ADD CONSTRAINT FK_PRODUCTINFO_PRODUCT
   FOREIGN KEY (PRODUCT_ID)
   REFERENCES PRODUCT;

ALTER TABLE RECOMMENDATION
   ADD CONSTRAINT FK_RECOMMENDATION_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE RECOMMENDATION
   ADD CONSTRAINT FK_RECOMMENDATION_REVIEW
   FOREIGN KEY (REVIEW_ID)
   REFERENCES REVIEW;

ALTER TABLE REFUND
   ADD CONSTRAINT FK_REFUND_ORDERS
   FOREIGN KEY (ORDER_ID)
   REFERENCES ORDERS;

ALTER TABLE RETURN
   ADD CONSTRAINT FK_RETURN_ADMIN
   FOREIGN KEY (ADMIN_ID)
   REFERENCES ADMIN;

ALTER TABLE RETURN
   ADD CONSTRAINT FK_RETURN_ORDERPRODUCT
   FOREIGN KEY (ORDER_PRODUCT_ID)
   REFERENCES ORDER_PRODUCT;

ALTER TABLE RETURN
   ADD CONSTRAINT FK_RETURN_REFUND
   FOREIGN KEY (REFUND_ID)
   REFERENCES REFUND;

ALTER TABLE REVIEW
   ADD CONSTRAINT FK_REVIEW_MEMBER
   FOREIGN KEY (MEMBER_ID)
   REFERENCES MEMBER;

ALTER TABLE REVIEW
   ADD CONSTRAINT FK_REVIEW_PRODUCTINFO
   FOREIGN KEY (PRODUCT_INFO_ID)
   REFERENCES PRODUCT_INFO;

INSERT INTO USERS(USER_ID , UTYPE , LOGIN_ID , LOGIN_PASSWORD , REGISTRANT , REGISTRATION_TIME , MODIFIER , MODIFICATION_TIME , DELETE_YN )
VALUES(1, 'MEMBER', 'member', '1234', 'SYSTEM', CURRENT_TIMESTAMP(), 'SYSTEM', CURRENT_TIMESTAMP(), 'N');

INSERT INTO MEMBER(MEMBER_ID ,NAME ,CITY ,STREET ,ZIPCODE ,TELEPHONEDMS ,PHONE_NUMBER ,EMAIL ,BIRTH ,MILEAGE )
VALUES (1, '테스트멤버', '시티', '스트리트', '31442', '042-222-333', '010-0032-0404', 'arbanware@naver.com', '880721', 0);

INSERT INTO AUTHORIZATIONS (USER_ID , AUTH , REGISTRATION_TIME )
VALUES(1, 'ROLE_MEMBER', CURRENT_TIMESTAMP());

INSERT INTO USERS(USER_ID , UTYPE , LOGIN_ID , LOGIN_PASSWORD , REGISTRANT , REGISTRATION_TIME , MODIFIER , MODIFICATION_TIME , DELETE_YN )
VALUES(2, 'ADMIN', 'admin', '1234', 'SYSTEM', CURRENT_TIMESTAMP(), 'SYSTEM', CURRENT_TIMESTAMP(), 'N');

INSERT INTO ADMIN(ADMIN_ID , NAME ) VALUES(2, '테스트관리자');

INSERT INTO AUTHORIZATIONS (USER_ID , AUTH , REGISTRATION_TIME )
VALUES(2, 'ROLE_ADMIN', CURRENT_TIMESTAMP());